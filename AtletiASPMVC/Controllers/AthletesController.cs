using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using AtletiASPMVC.Models;

namespace AtletiASPMVC.Controllers
{
    public class AthletesController : Controller
    {
        private OlympicsEntities db = new OlympicsEntities();


        public ActionResult Search()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Search(AthleteSearch searchParams)
        {
            if (searchParams == null || searchParams.Name == "" || String.IsNullOrWhiteSpace(searchParams.Name))
                return RedirectToAction("Index");

            return RedirectToAction("Index", new { searchString = searchParams.Name });
        }

        [Route("Athletes/Index/{searchString}")]
        public ActionResult Index(string searchString)
        {
            var results = db.Athletes.Where(w => w.Name.Contains(searchString)).OrderBy(o=>o.Name);
            return View(results.ToList());
        }



        //Autogenerated Code from here on 

        // GET: Athletes
        public ActionResult Index()
        {
            var athletes = db.Athletes.OrderBy(o => o.Name)
                .Include(a => a.Nationality).Include(a => a.Sport);
            return View(athletes.ToList());
        }

        // GET: Athletes/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Athlete athlete = db.Athletes.FirstOrDefault(q=>q.Id == id);

            if (athlete == null)
            {
                return HttpNotFound();
            }
            return View(athlete);
        }

        // GET: Athletes/Create
        public ActionResult Create()
        {
            ViewBag.fk_Nationality = new SelectList(db.Nationalities, "Id", "Code");
            ViewBag.FK_Sport = new SelectList(db.Sports, "Id", "Name");
            return View();
        }

        // POST: Athletes/Create
        // Per la protezione da attacchi di overposting, abilitare le proprietà a cui eseguire il binding. 
        // Per altri dettagli, vedere https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "Id,Name,fk_Nationality,Sex,Dob,Height,Weight,FK_Sport,gold,silver,bronze")] Athlete athlete)
        {
            if (ModelState.IsValid)
            {
                db.Athletes.Add(athlete);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            ViewBag.fk_Nationality = new SelectList(db.Nationalities, "Id", "Code", athlete.fk_Nationality);
            ViewBag.FK_Sport = new SelectList(db.Sports, "Id", "Name", athlete.FK_Sport);
            return View(athlete);
        }

        // GET: Athletes/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Athlete athlete = db.Athletes.Find(id);
            if (athlete == null)
            {
                return HttpNotFound();
            }
            ViewBag.fk_Nationality = new SelectList(db.Nationalities, "Id", "Code", athlete.fk_Nationality);
            ViewBag.FK_Sport = new SelectList(db.Sports, "Id", "Name", athlete.FK_Sport);
            return View(athlete);
        }

        // POST: Athletes/Edit/5
        // Per la protezione da attacchi di overposting, abilitare le proprietà a cui eseguire il binding. 
        // Per altri dettagli, vedere https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "Id,Name,fk_Nationality,Sex,Dob,Height,Weight,FK_Sport,gold,silver,bronze")] Athlete athlete)
        {
            if (ModelState.IsValid)
            {
                db.Entry(athlete).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            ViewBag.fk_Nationality = new SelectList(db.Nationalities, "Id", "Code", athlete.fk_Nationality);
            ViewBag.FK_Sport = new SelectList(db.Sports, "Id", "Name", athlete.FK_Sport);
            return View(athlete);
        }

        // GET: Athletes/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Athlete athlete = db.Athletes.Find(id);
            if (athlete == null)
            {
                return HttpNotFound();
            }
            return View(athlete);
        }

        // POST: Athletes/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            Athlete athlete = db.Athletes.Find(id);
            db.Athletes.Remove(athlete);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
